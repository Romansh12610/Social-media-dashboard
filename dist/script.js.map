{"version":3,"sources":["script.js"],"names":["btnBg","document","querySelector","btn","shiftX","getBoundingClientRect","left","userTheme","window","matchMedia","initTheme","localStorage","getItem","showInitTheme","matches","currentThemeSetting","documentElement","setAttribute","checkedInput","id","unCheckedInput","removeAttribute","moveButton","inputId","style","transform","concat","leftEdge","offsetWidth","moveToRight","bg","el","moveToLeft","toggleTheme","newCheckedBtn","checkedBtn","focus","getElementById","addEventListener","fieldset","onLabelClick","event","target","closest","contains","nextId","getAttribute","targetInput","checked","onButtonFocus","arrowPressed","key","removeEventListener"],"mappings":"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","file":"script.js","sourcesContent":["//checking media query\r\nlet btnBg = document.querySelector('.toggle__background');\r\nlet btn = document.querySelector('.toggle__button');\r\nlet shiftX = btn.getBoundingClientRect().left - btnBg.getBoundingClientRect().left;\r\n\r\nconst userTheme = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\nconst initTheme = localStorage.getItem(\"theme\");\r\n\r\nfunction showInitTheme(initTheme, userTheme) {\r\n    if (initTheme !== null) {\r\n        return initTheme;\r\n    } else {\r\n        return userTheme.matches ? \"dark\" : \"light\"; \r\n    }\r\n}\r\n\r\nlet currentThemeSetting = showInitTheme(initTheme, userTheme);\r\n\r\ndocument.documentElement.setAttribute('data-theme', currentThemeSetting);\r\n\r\nlet checkedInput = document.querySelector('input[checked]');\r\n\r\nif (checkedInput.id !== currentThemeSetting) {\r\n    let unCheckedInput = document.querySelector('input:not([checked])');\r\n    checkedInput.removeAttribute('checked');\r\n    unCheckedInput.setAttribute('checked', '');\r\n    moveButton(unCheckedInput);\r\n\r\n    checkedInput = unCheckedInput;\r\n}\r\n\r\n//helper functions\r\nfunction moveButton(inputId) {\r\n    if (inputId === 'dark') {\r\n        btn.style.transform = `translate(${0}px)`;\r\n    } else {\r\n        let leftEdge = btnBg.offsetWidth - btn.offsetWidth - shiftX * 2;\r\n        btn.style.transform = `translate(${leftEdge}px)`;\r\n    }\r\n}\r\n\r\nfunction moveToRight(bg, el, shiftX) {\r\n    let leftEdge = bg.offsetWidth - el.offsetWidth - shiftX * 2;\r\n    el.style.transform = `translate(${leftEdge}px)`;\r\n}\r\n\r\nfunction moveToLeft(el) {\r\n    el.style.transform = `translate(${0}px)`;\r\n}\r\n\r\n\r\n//toggle button moving\r\nbtnBg.addEventListener('click', toggleTheme);\r\n\r\nfunction toggleTheme() {\r\n    //changing checked radio btn\r\n    let checkedBtn = document.querySelector('input[checked]');\r\n    let newCheckedBtn;\r\n    btn.focus();\r\n\r\n    switch(checkedBtn.id) {\r\n        case 'dark':\r\n            checkedBtn.removeAttribute('checked');\r\n            newCheckedBtn = document.getElementById('light');\r\n            newCheckedBtn.setAttribute('checked', '');\r\n            moveToRight(btnBg, btn, shiftX);\r\n            document.documentElement.setAttribute('data-theme', newCheckedBtn.id);\r\n            break;\r\n\r\n        case 'light':\r\n            checkedBtn.removeAttribute('checked');\r\n            newCheckedBtn = document.getElementById('dark');\r\n            newCheckedBtn.setAttribute('checked', '');\r\n            moveToLeft(btn);\r\n            document.documentElement.setAttribute('data-theme', newCheckedBtn.id);\r\n            break;\r\n    }\r\n}\r\n\r\n\r\n//moving toggle on label-clicking\r\nlet fieldset = document.querySelector('.toggle');\r\nfieldset.addEventListener('click', onLabelClick);\r\n\r\nfunction onLabelClick(event) {\r\n    let target = event.target.closest('label');\r\n    if (!target || !fieldset.contains(target)) return;\r\n\r\n    let nextId = target.getAttribute('for');\r\n    let targetInput = document.getElementById(nextId);\r\n    if (!targetInput.checked) targetInput.setAttribute('checked', '');\r\n    document.documentElement.setAttribute('data-theme', targetInput.id);\r\n\r\n    if (nextId == 'dark') {\r\n        moveToLeft(btn); \r\n    } else {\r\n        moveToRight(btnBg, btn, shiftX);\r\n    }\r\n}\r\n\r\n\r\n//focus-button event\r\nbtn.addEventListener('focus', onButtonFocus);\r\n\r\nfunction onButtonFocus() {\r\n    document.addEventListener('keydown', arrowPressed);\r\n    btn.addEventListener('blur', function() {\r\n        document.removeEventListener('keydown', arrowPressed);\r\n    });\r\n\r\n    function arrowPressed(event) {\r\n        let checkedBtn = document.querySelector('input[checked]');\r\n\r\n        if (checkedBtn.id === 'dark' && event.key == 'ArrowRight') {\r\n            checkedBtn.removeAttribute('checked');\r\n            let newCheckedBtn = document.getElementById('light');\r\n            newCheckedBtn.setAttribute('checked', '');\r\n            document.documentElement.setAttribute('data-theme', newCheckedBtn.id);\r\n    \r\n            moveToRight(btnBg, btn, shiftX);\r\n\r\n        } else if (checkedBtn.id === 'light' && event.key == 'ArrowLeft') {\r\n            checkedBtn.removeAttribute('checked');\r\n            let newCheckedBtn = document.getElementById('dark');\r\n            newCheckedBtn.setAttribute('checked', '');\r\n            document.documentElement.setAttribute('data-theme', newCheckedBtn.id);\r\n\r\n            moveToLeft(btn);\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n}"]}